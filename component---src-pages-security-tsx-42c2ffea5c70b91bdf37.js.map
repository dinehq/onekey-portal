{"version":3,"file":"component---src-pages-security-tsx-42c2ffea5c70b91bdf37.js","mappings":"sOAWaA,EAAwC,SAACC,GACpD,IAAQC,EAAkDD,EAAlDC,wBAAR,EAA0DD,EAAzBE,OAAAA,OAAjC,MAA0C,EAA1C,EAA6CC,EAAaH,EAAbG,SAE7C,OACEC,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CAAKC,GAAI,CAAEC,SAAU,WAAYC,SAAU,OACxCP,EAAwBQ,KAAI,SAACC,EAAMC,GAAP,OAC3BP,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEO,IAAKF,EAAKG,KACVP,GAAI,CACFQ,QAASH,GAAST,EAAS,EAAI,EAC/Ba,WAAY,UACZC,WAAY,oBACZC,IAAK,EACLV,SAAoB,IAAVI,EAAc,WAAa,aAGtCD,EAAKQ,UAXT,IAcAf,EAnBA,ECCMgB,EAAgC,SAACnB,GAC5C,IAAQG,EAAwCH,EAAxCG,SAAUU,EAA8Bb,EAA9Ba,KAAMO,EAAwBpB,EAAxBoB,YAAaC,EAAWrB,EAAXqB,OAC/BC,GAAQC,EAAAA,EAAAA,KAEd,OACEnB,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CAAMlB,GAAI,CAAEmB,IAAK,GAAIC,cAAe,YAClCtB,EAAAA,EAAAA,IAACuB,EAAAA,KAAD,CACErB,GAAIgB,EAAMM,KAAKC,UACfC,EAAGR,EAAMM,KAAKG,UACdC,GAAIV,EAAMM,KAAKK,WAEdpB,GAGFO,EAAYX,KAAI,SAACC,GAAD,OACfN,EAAAA,EAAAA,IAAC8B,EAAAA,EAAD,CAAG5B,GAAIgB,EAAMM,KAAKO,UAAWL,EAAGR,EAAMM,KAAKQ,UAAWxB,IAAKF,GACxDA,EAFJ,IAMAW,IACCjB,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CAAKC,GAAI,CAAE+B,MAAO,iBAChBjC,EAAAA,EAAAA,IAACkC,EAAAA,KAAD,CAAMC,GAAIlB,EAAOmB,OACfpC,EAAAA,EAAAA,IAACqC,EAAAA,OAAD,CAAQC,WAAW,OAAOC,QAAStB,EAAOsB,SACvCtB,EAAOO,QAMfzB,EA9BA,E,oBCaA,SAASyC,IACd,IAAQC,GAAMC,EAAAA,EAAAA,kBAAND,EAER,MAAO,CACLE,SAAUF,EAAE,8BACZG,MAAOH,EAAE,mEACTzB,YAAayB,EACX,wEAEFI,MAAO,CACL,CACEpC,KAAMgC,EAAE,sBACRzB,YAAa,CACXyB,EAAE,6BACFA,EAAE,8BAEJ3B,WACEd,EAAAA,EAAAA,IAAC8C,EAAAA,EAAD,CACEC,IAAI,2BACJC,IAAKP,EAAE,sBAFT,qBAKFxB,OAAQ,CACNO,KAAMiB,EAAE,sBACRL,KAAM,+BACNG,QAAS,aAGb,CACE9B,KAAMgC,EAAE,yBACRzB,YAAa,CACXyB,EAAE,gCACFA,EAAE,gCACFA,EAAE,iCAEJ3B,WACEd,EAAAA,EAAAA,IAAC8C,EAAAA,EAAD,CACEC,IAAI,2BACJC,IAAKP,EAAE,yBAFT,uBAMJ,CACEhC,KAAMgC,EAAE,oBACRzB,YAAa,CACXyB,EAAE,2BACFA,EAAE,2BACFA,EAAE,4BAEJ3B,WACEd,EAAAA,EAAAA,IAAC8C,EAAAA,EAAD,CACEC,IAAI,2BACJC,IAAKP,EAAE,oBAFT,wBAQT,CCzEM,IAAMQ,EAA8B,SAACrD,GAC1C,IAAQG,EAAaH,EAAbG,SACFmB,GAAQC,EAAAA,EAAAA,KAEd,OACEnB,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACF+B,MAAO,EACPiB,OAAQ,OACRC,gBAAiB,+BAGnBnD,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACF+B,MAAO,OACPiB,OAAQ,IACR/C,SAAU,SACViD,WAAYlC,EAAMmC,OAAOC,MACzBzC,IAAI,uBAGPd,EArBA,ECSMwD,EAAwC,SAAC3D,GACpD,IAAQG,EAAaH,EAAbG,SACFyD,EAAqBhB,IAC3B,GAAqCiB,EAAAA,EAAAA,MAA7BP,OAAQQ,OAAhB,MAA+B,EAA/B,EACA,GAA2CC,EAAAA,EAAAA,IAA6B,GAAhEC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,0BACPC,GAAcC,EAAAA,EAAAA,GAClBF,EACA,CAAC,GAAK,KACN,CAAC,EAAG,IAGAG,GAAeD,EAAAA,EAAAA,GAAaD,GAAa,SAACG,GAG9C,OAFcC,SAASD,EAAME,QAAQ,GADN,IAM3BC,EACJV,EAAe,IAAM,CAAE7C,IAAI,qBAAgC,CAAEA,IAAK,KAEpE,OACEb,EAAAA,EAAAA,IAACC,EAAAA,IAAD,MACED,EAAAA,EAAAA,IAACqE,EAAAA,UAAD,MACErE,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CAAMlB,GAAI,CAAEoE,eAAgB,gBAAiBC,WAAY,MACvDvE,EAAAA,EAAAA,IAACC,EAAAA,IAAD,MACED,EAAAA,EAAAA,IAACiD,EAAD,QAGFjD,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CACElB,GAAI,CACF+B,MAAO,IACPX,cAAe,SACfD,IAAK,IACLmD,cAAe,KAEjB5C,GAAI,CAAEK,MAAO,KACbwC,IAAK,CAAExC,MAAO,MAEbuB,EAAmBX,MAAMxC,KAAI,SAACC,EAAMC,GAAP,OAC5BP,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACFS,WAAY,UACZC,WAAY,eACZF,QAASH,IAAUyD,EAAaU,MAAQ,EAAI,IAE9ClE,IAAKF,EAAKG,OAEVT,EAAAA,EAAAA,IAACe,EAAcT,GATlB,MAcHN,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACF+B,MAAO,IACP9B,SAAU,YAEZyB,GAAI,CAAEK,MAAO,KACbwC,IAAK,CAAExC,MAAO,OAEdjC,EAAAA,EAAAA,IAAAA,MAAAA,CAAK4D,IAAKA,KAEV5D,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACE0E,KAAG,yBACEP,EADF,CAEDjE,SAAU,SACVyE,SAAU,SACVC,QAAS,WAJR,eAOH7E,EAAAA,EAAAA,IAACL,EAAD,CACEG,OAAQkE,EAAaU,MACrB7E,wBAAyB2D,EAAmBX,YAOrD9C,EA/EA,E,UCTP,2CAMa+E,EAAsC,SAAClF,GAAW,IAAD,EACpDG,EAAaH,EAAbG,SAEFyD,EAAqBhB,IAC3B,GAAsCuC,EAAAA,EAAAA,YAA/BC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,GAAlCG,EAAP,KAAiBC,EAAjB,KAEA,GAAsBC,EAAAA,EAAAA,MAAdxB,EAAR,EAAQA,IAAKyB,EAAb,EAAaA,KACPC,EAAsB,UAAGD,aAAH,EAAGA,EAAMpD,aAAT,QAAkB,EAC9C,GAAwC8C,EAAAA,EAAAA,UAAS,GAA1Cf,EAAP,KAAqBuB,EAArB,KAgBA,OAJAC,EAAAA,EAAAA,KAAY,WATNR,SAAAA,EAAaE,WACfK,EACEE,KAAKC,IAAIxB,UAAiC,EAAvBc,EAAYE,UAAcf,QAAQ,MAGvDgB,EAAYH,aAAD,EAACA,EAAaE,UAIlB,GAER,MAGDlF,EAAAA,EAAAA,IAACC,EAAAA,IAAD,MACED,EAAAA,EAAAA,IAACqE,EAAAA,UAAD,MACErE,EAAAA,EAAAA,IAACL,EAAD,CACEG,OAAQkE,EACRnE,wBAAyB2D,EAAmBX,SAG9C7C,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACFgD,OAAQ,EACRE,WAAY,4BACZwB,SAAU,SACVzE,SAAU,cAGZH,EAAAA,EAAAA,IAAAA,MAAAA,CAAK2E,IAAG,EAAqBf,IAAKA,KAClC5D,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACFS,WAAY,QACZC,WAAY,oBACZqB,MAxCa,KA4CVqD,EA5CU,KA4CmCJ,EAChDhC,OAAQ,EACRE,WAAYlC,EAAAA,GAAAA,OAAAA,YAMpBlB,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CAAKC,GAAI,CAAEqE,WAAY,MACrBvE,EAAAA,EAAAA,IAAC2F,EAAAA,GAAD,CACEC,SAAUX,EACVY,aAAc,GACdC,MAAO,CACLC,YAAa,GACbC,aAAc,KAGfxC,EAAmBX,MAAMxC,KAAI,SAACC,GAAD,OAC5BN,EAAAA,EAAAA,IAACiG,EAAAA,YAAD,CAAazF,IAAKF,EAAKG,KAAMqF,MAAO,CAAE7D,MAAO,OAC3CjC,EAAAA,EAAAA,IAACe,EAAcT,GAFlB,MAQJP,EA3EA,ECJMmG,EAAsC,SAACtG,GAClD,IAAQG,EAAaH,EAAbG,SAEFyD,EAAqBhB,IAC3B,GAAwCuC,EAAAA,EAAAA,UAAS,GAA1Cf,EAAP,KAAqBuB,EAArB,KAEA,OACEvF,EAAAA,EAAAA,IAACqE,EAAAA,UAAD,MACErE,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CAAKC,GAAI,CAAE+B,MAAO,IAAKkE,WAAY,OAAQC,YAAa,UACtDpG,EAAAA,EAAAA,IAACL,EAAD,CACEG,OAAQkE,EACRnE,wBAAyB2D,EAAmBX,UAIhD7C,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACFgD,OAAQ,EACRE,WAAY,4BACZwB,SAAU,SACVzE,SAAU,cAGZH,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACFS,WAAY,QACZC,WAAY,aACZqB,OAAY+B,EAAe,GAAK,EAAK,IAAhC,IACLd,OAAQ,EACRE,WAAYlC,EAAAA,GAAAA,OAAAA,WAKlBlB,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CAAMlB,GAAI,CAAEqE,WAAY,GAAIlD,IAAKH,EAAAA,GAAAA,KAAAA,EAAAA,SAC9BsC,EAAmBX,MAAMxC,KAAI,SAACC,EAAMC,GAAP,OAC5BP,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CACFmG,KAAM,EACN1F,WAAY,UACZC,WAAY,eACZF,QAASH,IAAUyD,EAAe,EAAI,IAExCsC,aAAc,kBAAMf,EAAgBhF,EAPtC,EAQEgG,QAAS,kBAAMhB,EAAgBhF,EARjC,EASEC,IAAKF,EAAKG,OAEVT,EAAAA,EAAAA,IAACe,EAAcT,GAZlB,KAiBFP,EApDA,ECCMyG,EAAwB,SAAC5G,GACpC,IAAQG,EAA2CH,EAA3CG,SAAU4C,EAAiC/C,EAAjC+C,SAAU3B,EAAuBpB,EAAvBoB,YAAa4B,EAAUhD,EAAVgD,MACnC1B,GAAQC,EAAAA,EAAAA,KAEd,OACEnB,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CAAMlB,GAAI,CAAEoE,eAAgB,YAC1BtE,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CACElB,GAAI,CACFuG,UAAW,SACXnF,cAAe,SACfoF,WAAY,SACZrF,IAAK,IAEPsF,EAAG,CAAEtF,IAAK,MAEVrB,EAAAA,EAAAA,IAACuB,EAAAA,KAAD,CACEoD,KAAG,QAAE,CACHiC,MAAO1F,EAAMmC,OAAOwD,QACpBC,cAAe,aAFd,aAIH5G,GAAIgB,EAAMM,KAAKuF,UACfJ,EAAGzF,EAAMM,KAAKC,WAEbkB,IAGH3C,EAAAA,EAAAA,IAACgH,EAAAA,GAAD,CACErC,KAAG,QAAE,CAAEiC,MAAO1F,EAAMmC,OAAOC,OAAxB,aACHpD,GAAIgB,EAAMM,KAAKC,UACfkF,EAAC,iBAAOzF,EAAMM,KAAKK,UAAlB,CAA6BzB,SAAU,MACxCsB,EAAC,iBAAOR,EAAMM,KAAKyF,UAAlB,CAA6B7G,SAAU,MACxCwB,GAAE,iBAAOV,EAAMM,KAAK0F,WAAlB,CAA8B9G,SAAU,MAC1CqE,IAAG,iBAAOvD,EAAMM,KAAK2F,WAAlB,CAA8B/G,SAAU,QAE1CwC,IAGH5C,EAAAA,EAAAA,IAACuB,EAAAA,KAAD,CACEoD,KAAG,QAAE,CAAEiC,MAAO1F,EAAMmC,OAAOwD,SAAxB,aACH3G,GAAIgB,EAAMM,KAAKQ,UACf2E,EAAG,CAAEvG,SAAU,KACfwB,GAAE,iBAAOV,EAAMM,KAAK4F,UAAlB,CAA6BhH,SAAU,OAExCY,GAEFjB,GA7CF,ECGMsH,EAA0C,SAACzH,GACtD,IAAQG,EAAaH,EAAbG,SACFmB,GAAQC,EAAAA,EAAAA,KACRqC,EAAqBhB,IAE3B,OACExC,EAAAA,EAAAA,IAACsH,EAAAA,QAAD,CACEpH,GAAI,CACFiD,gBAAiBjC,EAAMmC,OAAOkE,QAC9BX,MAAO1F,EAAMmC,OAAOC,MACpBiB,WAAY,GACZC,cAAe,IAEjB9C,EAAG,CACD6C,WAAY,IACZC,cAAe,OAGjBxE,EAAAA,EAAAA,IAACqE,EAAAA,UAAD,MACErE,EAAAA,EAAAA,IAACwG,EAAUhD,KAIbxD,EAAAA,EAAAA,IAACwH,EAAAA,YAAD,CAAatH,IAAE,EAACuH,GAAC,IACfzH,EAAAA,EAAAA,IAAC8E,EAAD,QAIF9E,EAAAA,EAAAA,IAACwH,EAAAA,YAAD,CAAab,GAAC,IACZ3G,EAAAA,EAAAA,IAACkG,EAAD,QAIFlG,EAAAA,EAAAA,IAACwH,EAAAA,YAAD,CAAa9F,GAAC,EAACE,IAAE,EAAC6C,KAAG,IACnBzE,EAAAA,EAAAA,IAACuD,EAAD,QAGFvD,EAAAA,EAAAA,IAACC,EAAAA,IAAD,KAAMF,GArCL,ECIM2H,EAAsB,SAAC9H,GAClC,IAAQG,EAAaH,EAAbG,SACFmB,GAAQC,EAAAA,EAAAA,KAEd,OACEnB,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CAAEkD,WAAYlC,EAAMmC,OAAOsE,aAC/BjG,EAAG,CAAE0B,WAAYlC,EAAMmC,OAAOC,SAE9BtD,EAAAA,EAAAA,IAAC4H,EAAAA,GAAD,MACE5H,EAAAA,EAAAA,IAAC6H,EAAAA,GAAD,MACE7H,EAAAA,EAAAA,IAAC8C,EAAAA,EAAD,CACEgD,MAAO,CACL7D,MAAO,OACPiB,OAAQ,OACR4E,MAAO,EACP3H,SAAU,YAEZ4C,IAAI,kCACJC,IAAI,OARN,wBAYFhD,EAAAA,EAAAA,IAAC+H,EAAAA,GAAD,MACE/H,EAAAA,EAAAA,IAAC8C,EAAAA,EAAD,CACEgD,MAAO,CACL7D,MAAO,OACPiB,OAAQ,OACR4E,MAAO,EACP3H,SAAU,YAEZ4C,IAAI,kCACJC,IAAI,OARN,wBAYFhD,EAAAA,EAAAA,IAACgI,EAAAA,GAAD,MACEhI,EAAAA,EAAAA,IAAC8C,EAAAA,EAAD,CACEgD,MAAO,CACL7D,MAAO,MACPiB,OAAQ,OACR4E,MAAO,EACP3H,SAAU,YAEZ4C,IAAI,mCACJC,IAAI,OARN,wBAYFhD,EAAAA,EAAAA,IAACiI,EAAAA,GAAD,MACEjI,EAAAA,EAAAA,IAACkI,EAAAA,GAAD,MACElI,EAAAA,EAAAA,IAACmI,EAAAA,KAAD,CAAM1H,KAAK,qCAAqC2H,iBAAe,MAGjEpI,EAAAA,EAAAA,IAACqI,EAAAA,GAAD,MACErI,EAAAA,EAAAA,IAACmI,EAAAA,KAAD,CAAM1H,KAAK,8CAIdV,GA3DF,ECEA,IAAMuI,EAA0D,SACrE1I,GAEA,ICtBQ6C,EDsBA1C,EAAaH,EAAbG,SACFwI,ECrBC,CACL3F,OAHMH,GAAMC,EAAAA,EAAAA,kBAAND,GAGG,8DACTzB,YAAayB,EACX,mEAGFI,MAAO,CACL,CACEpC,KAAMgC,EAAE,oCACRzB,YAAayB,EAAE,0CAEjB,CACEhC,KAAMgC,EAAE,qCACRzB,YAAayB,EAAE,2CAEjB,CACEhC,KAAMgC,EAAE,6BACRzB,YAAayB,EAAE,qCDKfvB,GAAQC,EAAAA,EAAAA,KAEd,OACEnB,EAAAA,EAAAA,IAACsH,EAAAA,QAAD,CACEpH,GAAI,CAAEqE,WAAY,GAAIC,cAAe,IACrC5C,GAAI,CAAE2C,WAAY,IAAKC,cAAe,OAEtCxE,EAAAA,EAAAA,IAACqE,EAAAA,UAAD,MACErE,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CACElB,GAAI,CAAEmB,IAAK,GAAIC,cAAe,SAAUoF,WAAY,UACpDC,EAAG,CAAEtF,IAAK,IACVO,GAAI,CAAEP,IAAK,MAEXrB,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CACEC,GAAI,CAAEuG,UAAW,SAAUrG,SAAU,KACrCuG,EAAG,CAAEvG,SAAU,KACfwB,GAAI,CAAExB,SAAU,OAEhBJ,EAAAA,EAAAA,IAACwI,EAAAA,GAAD,KAAeD,EAA2B3F,QAE1C5C,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CAAKC,GAAI,CAAEqE,WAAY,KACrBvE,EAAAA,EAAAA,IAACuB,EAAAA,KAAD,CACEoD,KAAG,QAAE,CAAEiC,MAAO1F,EAAMmC,OAAOoF,SAAxB,aACHvI,GAAIgB,EAAMM,KAAKO,UACfH,GAAIV,EAAMM,KAAKkH,WAEdH,EAA2BvH,gBAKlChB,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CACElB,GAAI,CAAEmB,IAAK,GAAIC,cAAe,UAC9BqF,EAAG,CAAEtF,IAAK,GAAIC,cAAe,OAC7BM,GAAI,CAAEP,IAAK,IACXoD,IAAK,CAAEpD,IAAK,KAEXkH,EAA2B1F,MAAMxC,KAAI,SAACC,EAAMC,GAAP,OACpCP,EAAAA,EAAAA,IAACoB,EAAAA,KAAD,CACEZ,IAAKF,EAAKG,KACVP,GAAI,CAAEmB,IAAK,GAAIC,cAAe,SAAU+E,KAAM,KAE9CrG,EAAAA,EAAAA,IAACuB,EAAAA,KAAD,CACEoD,KAAG,QAAE,CAAEiC,MAAO1F,EAAMmC,OAAOwD,SAAxB,aACH3G,GAAIgB,EAAMM,KAAKmH,WAFjB,KAIOpI,EAAQ,KAEfP,EAAAA,EAAAA,IAAC4I,EAAAA,QAAD,CAAShC,MAAO1F,EAAMmC,OAAOwD,WAC7B7G,EAAAA,EAAAA,IAAC6I,EAAAA,GAAD,CACE3I,GAAE,iBACGgB,EAAMM,KAAKmH,UADd,CAEA/B,MAAO1F,EAAMmC,OAAOkE,UAEtBZ,EAAGzF,EAAMM,KAAKC,UACdG,GAAIV,EAAMM,KAAKG,WAEdrB,EAAKG,OAERT,EAAAA,EAAAA,IAAC8B,EAAAA,EAAD,CACE6C,KAAG,QAAE,CAAEiC,MAAO1F,EAAMmC,OAAOoF,SAAxB,aACHvI,GAAIgB,EAAMM,KAAKQ,WAEd1B,EAAKU,aA1BX,OAiCNjB,EA3EA,EENM+I,EAAoC,SAAClJ,GAChD,IAAQG,EAAaH,EAAbG,SACFmB,GAAQC,EAAAA,EAAAA,KAEd,OACEnB,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAC+I,EAAAA,OAAD,MACE/I,EAAAA,EAAAA,IAAAA,QAAAA,KAAAA,YAGFA,EAAAA,EAAAA,IAACgJ,EAAAA,IAAD,CAAKpG,MAAM,YAEX5C,EAAAA,EAAAA,IAACiJ,EAAAA,GAAD,OAEAjJ,EAAAA,EAAAA,IAACkJ,EAAAA,KAAD,MACElJ,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CAAKC,GAAI,CAAEiD,gBAAiBjC,EAAMmC,OAAOkE,WACvCvH,EAAAA,EAAAA,IAAC0H,EAAD,QAGF1H,EAAAA,EAAAA,IAACqH,EAAD,OAEArH,EAAAA,EAAAA,IAACqE,EAAAA,UAAD,MACErE,EAAAA,EAAAA,IAACsI,EAAD,OAEAtI,EAAAA,EAAAA,IAACC,EAAAA,IAAD,CAAKC,GAAI,CAAEsE,cAAe,MACxBxE,EAAAA,EAAAA,IAACmJ,EAAAA,GAAD,UAKNnJ,EAAAA,EAAAA,IAACoJ,EAAAA,GAAD,CAAYC,sBAAsB,EAAOC,kBAAkB,IAC1DvJ,EA/BA,C","sources":["webpack://portal/./src/components/pages/Security/FeatureSection/ImageSwitcher/ImageSwitcher.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/TextBlock.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/useFeatureSectionData.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/DesktopLayout/Progress.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/DesktopLayout/DesktopLayout.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/MobileLayout/MobileLayout.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/TabletLayout/TabletLayout.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/Title.tsx","webpack://portal/./src/components/pages/Security/FeatureSection/FeatureSection.tsx","webpack://portal/./src/components/pages/Security/Hero/Hero.tsx","webpack://portal/./src/components/pages/Security/TextDescriptionSection/TextDescriptionSection.tsx","webpack://portal/./src/components/pages/Security/TextDescriptionSection/useTextDescriptionSectionData.ts","webpack://portal/./src/components/pages/Security/Security.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\n\nimport { Box } from '../../../../base';\nimport { FeatureSectionDataItem } from '../useFeatureSectionData';\n\nexport interface ImageSwitcherProps {\n  children?: ReactNode;\n  featureSectionDataItems: FeatureSectionDataItem[];\n  active: number;\n}\n\nexport const ImageSwitcher: FC<ImageSwitcherProps> = (props) => {\n  const { featureSectionDataItems, active = 0, children } = props;\n\n  return (\n    <Box xs={{ position: 'relative', maxWidth: 1064 }}>\n      {featureSectionDataItems.map((item, index) => (\n        <Box\n          key={item.name}\n          xs={{\n            opacity: index <= active ? 1 : 0,\n            willChange: 'opacity',\n            transition: 'opacity 0.5s ease',\n            top: 0,\n            position: index === 0 ? 'relative' : 'absolute',\n          }}\n        >\n          {item.imageNode}\n        </Box>\n      ))}\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Box, Button, Flex, Link, P, Span } from '../../../base';\n\nimport { FeatureSectionDataItem } from './useFeatureSectionData';\n\nexport interface TextBlockProps extends FeatureSectionDataItem {\n  children?: ReactNode;\n}\n\nexport const TextBlock: FC<TextBlockProps> = (props) => {\n  const { children, name, description, button } = props;\n  const theme = useTheme();\n\n  return (\n    <Flex xs={{ gap: 16, flexDirection: 'column' }}>\n      <Span\n        xs={theme.text.medium600}\n        l={theme.text.medium700}\n        xl={theme.text.medium800}\n      >\n        {name}\n      </Span>\n\n      {description.map((item) => (\n        <P xs={theme.text.normal200} l={theme.text.normal300} key={item}>\n          {item}\n        </P>\n      ))}\n\n      {button && (\n        <Box xs={{ width: 'fit-content' }}>\n          <Link to={button.link}>\n            <Button themeColor=\"dark\" variant={button.variant}>\n              {button.text}\n            </Button>\n          </Link>\n        </Box>\n      )}\n\n      {children}\n    </Flex>\n  );\n};\n","import { ReactNode } from 'react';\n\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\n\nimport { ButtonProps } from '../../../base';\n\nexport type FeatureSectionData = {\n  subtitle: string;\n  title: string;\n  description: string;\n  items: FeatureSectionDataItem[];\n};\n\nexport type FeatureSectionDataItem = {\n  description: string[];\n  name: string;\n  imageNode: ReactNode;\n  button?: {\n    text: string;\n    link: string;\n    variant: ButtonProps['variant'];\n  };\n};\n\nexport function useFeatureSectionData(): FeatureSectionData {\n  const { t } = useTranslation();\n\n  return {\n    subtitle: t('title__professional_choice'),\n    title: t('title__what_makes_onekey_earn_the_trust_of_top_pro_institutions'),\n    description: t(\n      'title__what_makes_onekey_earn_the_trust_of_top_pro_institutions_desc',\n    ),\n    items: [\n      {\n        name: t('title__open_source'),\n        description: [\n          t('title__open_source_desc_1'),\n          t('title__open_source_desc_2'),\n        ],\n        imageNode: (\n          <StaticImage\n            src=\"./images/security-01.jpg\"\n            alt={t('title__open_source')}\n          />\n        ),\n        button: {\n          text: t('action__learn_more'),\n          link: 'https://github.com/OneKeyHQ/',\n          variant: 'outlined',\n        },\n      },\n      {\n        name: t('title__secure_element'),\n        description: [\n          t('title__secure_element_desc_1'),\n          t('title__secure_element_desc_2'),\n          t('title__secure_element_desc_3'),\n        ],\n        imageNode: (\n          <StaticImage\n            src=\"./images/security-02.jpg\"\n            alt={t('title__secure_element')}\n          />\n        ),\n      },\n      {\n        name: t('title__cold_keys'),\n        description: [\n          t('title__cold_keys_desc_1'),\n          t('title__cold_keys_desc_2'),\n          t('title__cold_keys_desc_3'),\n        ],\n        imageNode: (\n          <StaticImage\n            src=\"./images/security-03.jpg\"\n            alt={t('title__cold_keys')}\n          />\n        ),\n      },\n    ],\n  };\n}\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Box } from '../../../../base';\n\nexport interface ProgressProps {\n  children?: ReactNode;\n}\n\nexport const Progress: FC<ProgressProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n\n  return (\n    <Box\n      xs={{\n        width: 1,\n        height: '100%',\n        backgroundColor: 'rgba(255, 255, 255, 0.16)',\n      }}\n    >\n      <Box\n        xs={{\n          width: '100%',\n          height: 320,\n          position: 'sticky',\n          background: theme.colors.white,\n          top: `calc(50% - ${320}px)`,\n        }}\n      />\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTransform } from 'framer-motion';\n\nimport {\n  useElementInViewportProgress,\n  useWindowSize,\n} from '../../../../../hooks';\nimport { Box, Container, Flex } from '../../../../base';\nimport { ImageSwitcher } from '../ImageSwitcher';\nimport { TextBlock } from '../TextBlock';\nimport { useFeatureSectionData } from '../useFeatureSectionData';\n\nimport { Progress } from './Progress';\n\nexport interface DesktopLayoutProps {\n  children?: ReactNode;\n}\n\nexport const DesktopLayout: FC<DesktopLayoutProps> = (props) => {\n  const { children } = props;\n  const featureSectionData = useFeatureSectionData();\n  const { height: windowHeight = 0 } = useWindowSize();\n  const { ref, elementInViewportProgress } = useElementInViewportProgress(0);\n  const motionValue = useTransform(\n    elementInViewportProgress,\n    [0.6, 1.5],\n    [0, 2],\n  );\n\n  const currentIndex = useTransform(motionValue, (value) => {\n    const index = parseInt(value.toFixed(0));\n\n    return index;\n  });\n\n  const stickyPosition =\n    windowHeight > 600 ? { top: `calc(50% - ${600 / 2}px)` } : { top: 100 };\n\n  return (\n    <Box>\n      <Container>\n        <Flex xs={{ justifyContent: 'space-between', paddingTop: 80 }}>\n          <Box>\n            <Progress />\n          </Box>\n\n          <Flex\n            xs={{\n              width: 420,\n              flexDirection: 'column',\n              gap: 300,\n              paddingBottom: 300,\n            }}\n            xl={{ width: 500 }}\n            xxl={{ width: 600 }}\n          >\n            {featureSectionData.items.map((item, index) => (\n              <Box\n                xs={{\n                  willChange: 'opacity',\n                  transition: 'opacity 0.5s',\n                  opacity: index === currentIndex.get() ? 1 : 0.3,\n                }}\n                key={item.name}\n              >\n                <TextBlock {...item} />\n              </Box>\n            ))}\n          </Flex>\n\n          <Box\n            xs={{\n              width: 600,\n              position: 'relative',\n            }}\n            xl={{ width: 700 }}\n            xxl={{ width: 800 }}\n          >\n            <div ref={ref} />\n\n            <Box\n              css={{\n                ...stickyPosition,\n                position: 'sticky',\n                overflow: 'hidden',\n                padding: '0 64px',\n              }}\n            >\n              <ImageSwitcher\n                active={currentIndex.get()}\n                featureSectionDataItems={featureSectionData.items}\n              />\n            </Box>\n          </Box>\n        </Flex>\n      </Container>\n\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode, useState } from 'react';\n\nimport Swiper from 'swiper';\n\nimport { useBoundingClientRect, useInterval } from '../../../../../hooks';\nimport { theme } from '../../../../../theme';\nimport { Box, Container, SwiperSlide } from '../../../../base';\nimport { FreeSwiper } from '../../../../common';\nimport { ImageSwitcher } from '../ImageSwitcher';\nimport { TextBlock } from '../TextBlock';\nimport { useFeatureSectionData } from '../useFeatureSectionData';\n\nexport interface MobileLayoutProps {\n  children?: ReactNode;\n}\n\nexport const MobileLayout: FC<MobileLayoutProps> = (props) => {\n  const { children } = props;\n\n  const featureSectionData = useFeatureSectionData();\n  const [blockSwiper, setBlockSwiper] = useState<Swiper>();\n  const [progress, setProgress] = useState(0);\n  const progressBarWidth = 100;\n  const { ref, rect } = useBoundingClientRect();\n  const progressContainerWidth = rect?.width ?? 0;\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const updateProgress = () => {\n    if (blockSwiper?.progress) {\n      setCurrentIndex(\n        Math.abs(parseInt((blockSwiper.progress * 2).toFixed(0))),\n      );\n\n      setProgress(blockSwiper?.progress);\n    }\n  };\n\n  useInterval(() => {\n    updateProgress();\n  }, 100);\n\n  return (\n    <Box>\n      <Container>\n        <ImageSwitcher\n          active={currentIndex}\n          featureSectionDataItems={featureSectionData.items}\n        />\n\n        <Box\n          xs={{\n            height: 1,\n            background: 'rgba(255, 255, 255, 0.16)',\n            overflow: 'hidden',\n            position: 'relative',\n          }}\n        >\n          <div css={{ width: '100%' }} ref={ref} />\n          <Box\n            xs={{\n              willChange: 'width',\n              transition: 'width 0.2s linear',\n              width:\n                // fixed width\n                progressBarWidth +\n                // dynamic width\n                (progressContainerWidth - progressBarWidth) * progress,\n              height: 1,\n              background: theme.colors.white,\n            }}\n          />\n        </Box>\n      </Container>\n\n      <Box xs={{ paddingTop: 40 }}>\n        <FreeSwiper\n          onSwiper={setBlockSwiper}\n          spaceBetween={24}\n          style={{\n            paddingLeft: 24,\n            paddingRight: 24,\n          }}\n        >\n          {featureSectionData.items.map((item) => (\n            <SwiperSlide key={item.name} style={{ width: 272 }}>\n              <TextBlock {...item} />\n            </SwiperSlide>\n          ))}\n        </FreeSwiper>\n      </Box>\n\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode, useState } from 'react';\n\nimport { theme } from '../../../../../theme';\nimport { Box, Container, Flex } from '../../../../base';\nimport { ImageSwitcher } from '../ImageSwitcher';\nimport { TextBlock } from '../TextBlock';\nimport { useFeatureSectionData } from '../useFeatureSectionData';\n\nexport interface TabletLayoutProps {\n  children?: ReactNode;\n}\n\nexport const TabletLayout: FC<TabletLayoutProps> = (props) => {\n  const { children } = props;\n\n  const featureSectionData = useFeatureSectionData();\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  return (\n    <Container>\n      <Box xs={{ width: 400, marginLeft: 'auto', marginRight: 'auto' }}>\n        <ImageSwitcher\n          active={currentIndex}\n          featureSectionDataItems={featureSectionData.items}\n        />\n      </Box>\n\n      <Box\n        xs={{\n          height: 1,\n          background: 'rgba(255, 255, 255, 0.16)',\n          overflow: 'hidden',\n          position: 'relative',\n        }}\n      >\n        <Box\n          xs={{\n            willChange: 'width',\n            transition: 'width 0.5s',\n            width: `${((currentIndex + 1) / 3) * 100}%`,\n            height: 1,\n            background: theme.colors.white,\n          }}\n        />\n      </Box>\n\n      <Flex xs={{ paddingTop: 40, gap: theme.size.m.gutter }}>\n        {featureSectionData.items.map((item, index) => (\n          <Box\n            xs={{\n              flex: 1,\n              willChange: 'opacity',\n              transition: 'opacity 0.5s',\n              opacity: index === currentIndex ? 1 : 0.6,\n            }}\n            onMouseEnter={() => setCurrentIndex(index)}\n            onClick={() => setCurrentIndex(index)}\n            key={item.name}\n          >\n            <TextBlock {...item} />\n          </Box>\n        ))}\n      </Flex>\n\n      {children}\n    </Container>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Flex, H2, Span } from '../../../base';\n\nexport interface TitleProps {\n  children?: ReactNode;\n  subtitle: string;\n  title: string;\n  description: string;\n}\n\nexport const Title: FC<TitleProps> = (props) => {\n  const { children, subtitle, description, title } = props;\n  const theme = useTheme();\n\n  return (\n    <Flex xs={{ justifyContent: 'center' }}>\n      <Flex\n        xs={{\n          textAlign: 'center',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 10,\n        }}\n        m={{ gap: 24 }}\n      >\n        <Span\n          css={{\n            color: theme.colors.test300,\n            textTransform: 'uppercase',\n          }}\n          xs={theme.text.medium400}\n          m={theme.text.medium600}\n        >\n          {subtitle}\n        </Span>\n\n        <H2\n          css={{ color: theme.colors.white }}\n          xs={theme.text.medium600}\n          m={{ ...theme.text.medium800, maxWidth: 640 }}\n          l={{ ...theme.text.medium900, maxWidth: 740 }}\n          xl={{ ...theme.text.medium1000, maxWidth: 900 }}\n          xxl={{ ...theme.text.medium1100, maxWidth: 1120 }}\n        >\n          {title}\n        </H2>\n\n        <Span\n          css={{ color: theme.colors.test300 }}\n          xs={theme.text.normal300}\n          m={{ maxWidth: 640 }}\n          xl={{ ...theme.text.normal400, maxWidth: 850 }}\n        >\n          {description}\n        </Span>\n        {children}\n      </Flex>\n    </Flex>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Box, Container, OnlyDisplay, Section } from '../../../base';\n\nimport { DesktopLayout } from './DesktopLayout';\nimport { MobileLayout } from './MobileLayout';\nimport { TabletLayout } from './TabletLayout';\nimport { Title } from './Title';\nimport { useFeatureSectionData } from './useFeatureSectionData';\n\nexport interface FeatureSectionProps {\n  children?: ReactNode;\n}\n\nexport const FeatureSection: FC<FeatureSectionProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n  const featureSectionData = useFeatureSectionData();\n\n  return (\n    <Section\n      xs={{\n        backgroundColor: theme.colors.test500,\n        color: theme.colors.white,\n        paddingTop: 56,\n        paddingBottom: 72,\n      }}\n      l={{\n        paddingTop: 120,\n        paddingBottom: 120,\n      }}\n    >\n      <Container>\n        <Title {...featureSectionData} />\n      </Container>\n\n      {/* mobile */}\n      <OnlyDisplay xs s>\n        <MobileLayout />\n      </OnlyDisplay>\n\n      {/* tablet */}\n      <OnlyDisplay m>\n        <TabletLayout />\n      </OnlyDisplay>\n\n      {/* desktop */}\n      <OnlyDisplay l xl xxl>\n        <DesktopLayout />\n      </OnlyDisplay>\n\n      <Box>{children}</Box>\n    </Section>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nimport { Box, I18n } from '../../../base';\nimport {\n  HeroContainer,\n  HeroContent,\n  HeroDescription,\n  HeroDesktopBackground,\n  HeroMobileBackground,\n  HeroTabletBackground,\n  HeroTitle,\n} from '../../../common';\n\nexport interface HeroProps {\n  children?: ReactNode;\n}\n\nexport const Hero: FC<HeroProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n\n  return (\n    <Box\n      xs={{ background: theme.colors.transparent }}\n      l={{ background: theme.colors.white }}\n    >\n      <HeroContainer>\n        <HeroMobileBackground>\n          <StaticImage\n            style={{\n              width: '100%',\n              height: '100%',\n              right: 0,\n              position: 'absolute',\n            }}\n            src=\"./images/SecurityHeroMobile.jpg\"\n            alt=\"hero\"\n          />\n        </HeroMobileBackground>\n\n        <HeroTabletBackground>\n          <StaticImage\n            style={{\n              width: '100%',\n              height: '100%',\n              right: 0,\n              position: 'absolute',\n            }}\n            src=\"./images/SecurityHeroTablet.jpg\"\n            alt=\"hero\"\n          />\n        </HeroTabletBackground>\n\n        <HeroDesktopBackground>\n          <StaticImage\n            style={{\n              width: '50%',\n              height: '100%',\n              right: 0,\n              position: 'absolute',\n            }}\n            src=\"./images/SecurityHeroDesktop.jpg\"\n            alt=\"hero\"\n          />\n        </HeroDesktopBackground>\n\n        <HeroContent>\n          <HeroTitle>\n            <I18n name=\"title__security_both_hard_and_soft\" alwaysMultiLine />\n          </HeroTitle>\n\n          <HeroDescription>\n            <I18n name=\"title__security_both_hard_and_soft_desc\" />\n          </HeroDescription>\n        </HeroContent>\n\n        {children}\n      </HeroContainer>\n    </Box>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport {\n  Box,\n  Container,\n  Divider,\n  Flex,\n  H3,\n  P,\n  Section,\n  Span,\n} from '../../../base';\nimport { SectionTitle } from '../../../common';\n\nimport { useTextDescriptionSectionData } from './useTextDescriptionSectionData';\n\nexport interface TextDescriptionSectionProps {\n  children?: ReactNode;\n}\n\nexport const TextDescriptionSection: FC<TextDescriptionSectionProps> = (\n  props,\n) => {\n  const { children } = props;\n  const textDescriptionSectionData = useTextDescriptionSectionData();\n  const theme = useTheme();\n\n  return (\n    <Section\n      xs={{ paddingTop: 72, paddingBottom: 72 }}\n      xl={{ paddingTop: 120, paddingBottom: 120 }}\n    >\n      <Container>\n        <Flex\n          xs={{ gap: 32, flexDirection: 'column', alignItems: 'center' }}\n          m={{ gap: 36 }}\n          xl={{ gap: 80 }}\n        >\n          <Box\n            xs={{ textAlign: 'center', maxWidth: 760 }}\n            m={{ maxWidth: 660 }}\n            xl={{ maxWidth: 860 }}\n          >\n            <SectionTitle>{textDescriptionSectionData.title}</SectionTitle>\n\n            <Box xs={{ paddingTop: 8 }}>\n              <Span\n                css={{ color: theme.colors.test400 }}\n                xs={theme.text.normal200}\n                xl={theme.text.normal500}\n              >\n                {textDescriptionSectionData.description}\n              </Span>\n            </Box>\n          </Box>\n\n          <Flex\n            xs={{ gap: 36, flexDirection: 'column' }}\n            m={{ gap: 24, flexDirection: 'row' }}\n            xl={{ gap: 80 }}\n            xxl={{ gap: 90 }}\n          >\n            {textDescriptionSectionData.items.map((item, index) => (\n              <Flex\n                key={item.name}\n                xs={{ gap: 16, flexDirection: 'column', flex: 1 }}\n              >\n                <Span\n                  css={{ color: theme.colors.test300 }}\n                  xs={theme.text.medium500}\n                >\n                  {`0${index + 1}`}\n                </Span>\n                <Divider color={theme.colors.test300} />\n                <H3\n                  xs={{\n                    ...theme.text.medium500,\n                    color: theme.colors.test500,\n                  }}\n                  m={theme.text.medium600}\n                  xl={theme.text.medium700}\n                >\n                  {item.name}\n                </H3>\n                <P\n                  css={{ color: theme.colors.test400 }}\n                  xs={theme.text.normal300}\n                >\n                  {item.description}\n                </P>\n              </Flex>\n            ))}\n          </Flex>\n        </Flex>\n      </Container>\n      {children}\n    </Section>\n  );\n};\n","import { useTranslation } from 'gatsby-plugin-react-i18next';\n\nexport function useTextDescriptionSectionData() {\n  const { t } = useTranslation();\n\n  return {\n    title: t('title__earn_the_trust_of_top_and_professional_institutions'),\n    description: t(\n      'title__earn_the_trust_of_top_and_professional_institutions_desc',\n    ),\n\n    items: [\n      {\n        name: t('title__ce_and_rohs_certification'),\n        description: t('title__ce_and_rohs_certification_desc'),\n      },\n      {\n        name: t('title__ultrasonic_welding_process'),\n        description: t('title__ultrasonic_welding_process_desc'),\n      },\n      {\n        name: t('title__eal6_certification'),\n        description: t('title__eal6_certification_desc'),\n      },\n    ],\n  };\n}\n","import React, { ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\nimport { Helmet } from 'react-helmet';\n\nimport { Box, Container, Main, SEO } from '../../base';\nimport { Navigation, PageFooter, StayInTouch } from '../../common';\n\nimport { FeatureSection } from './FeatureSection';\nimport { Hero } from './Hero';\nimport { TextDescriptionSection } from './TextDescriptionSection';\n\nexport interface SecurityProps {\n  children?: ReactNode;\n}\n\nexport const Security: React.FC<SecurityProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Helmet>\n        <title>OneKey</title>\n      </Helmet>\n\n      <SEO title=\"onekey\" />\n\n      <Navigation />\n\n      <Main>\n        <Box xs={{ backgroundColor: theme.colors.test500 }}>\n          <Hero />\n        </Box>\n\n        <FeatureSection />\n\n        <Container>\n          <TextDescriptionSection />\n\n          <Box xs={{ paddingBottom: 80 }}>\n            <StayInTouch />\n          </Box>\n        </Container>\n      </Main>\n\n      <PageFooter isShowEmailSubscribe={false} isShowMediaLinks={false} />\n      {children}\n    </>\n  );\n};\n"],"names":["ImageSwitcher","props","featureSectionDataItems","active","children","___EmotionJSX","Box","xs","position","maxWidth","map","item","index","key","name","opacity","willChange","transition","top","imageNode","TextBlock","description","button","theme","useTheme","Flex","gap","flexDirection","Span","text","medium600","l","medium700","xl","medium800","P","normal200","normal300","width","Link","to","link","Button","themeColor","variant","useFeatureSectionData","t","useTranslation","subtitle","title","items","StaticImage","src","alt","Progress","height","backgroundColor","background","colors","white","DesktopLayout","featureSectionData","useWindowSize","windowHeight","useElementInViewportProgress","ref","elementInViewportProgress","motionValue","useTransform","currentIndex","value","parseInt","toFixed","stickyPosition","Container","justifyContent","paddingTop","paddingBottom","xxl","get","css","overflow","padding","MobileLayout","useState","blockSwiper","setBlockSwiper","progress","setProgress","useBoundingClientRect","rect","progressContainerWidth","setCurrentIndex","useInterval","Math","abs","FreeSwiper","onSwiper","spaceBetween","style","paddingLeft","paddingRight","SwiperSlide","TabletLayout","marginLeft","marginRight","flex","onMouseEnter","onClick","Title","textAlign","alignItems","m","color","test300","textTransform","medium400","H2","medium900","medium1000","medium1100","normal400","FeatureSection","Section","test500","OnlyDisplay","s","Hero","transparent","HeroContainer","HeroMobileBackground","right","HeroTabletBackground","HeroDesktopBackground","HeroContent","HeroTitle","I18n","alwaysMultiLine","HeroDescription","TextDescriptionSection","textDescriptionSectionData","SectionTitle","test400","normal500","medium500","Divider","H3","Security","Helmet","SEO","Navigation","Main","StayInTouch","PageFooter","isShowEmailSubscribe","isShowMediaLinks"],"sourceRoot":""}