{"version":3,"file":"7e74c6735e2ab5a4f252f174d9593296aa65eb57-db713629da095ac5b4a3.js","mappings":"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","sources":["webpack://portal/./src/components/pages/products/components/FullscreenScrollAnimation/PlayerText.tsx","webpack://portal/./src/components/pages/products/components/FullscreenScrollAnimation/PlayerContainer.tsx","webpack://portal/./src/components/pages/products/components/FullscreenScrollAnimation/FullscreenScrollAnimation.tsx","webpack://portal/./src/components/pages/products/components/MultiChainSupportSection/MultiChainSupportSection.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentColumn.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItem.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItemDescription.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItemDescriptions.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItemTitle.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/ContentItemTitle2.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/DynamicContent.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/Content/Content.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/SideImage.tsx","webpack://portal/./src/components/pages/products/components/TechnicalSpecificationsSection/TechnicalSpecificationsSection.tsx"],"sourcesContent":["import { FC, ReactNode, useEffect, useRef, useState } from 'react';\n\nimport { motion } from 'framer-motion';\n\nimport { Box } from '../../../../base';\nimport { Player } from '../../../../base/CanvasPlayerNext/Player';\n\nexport interface PlayerTextProps {\n  player: Player | null;\n  children?: ReactNode;\n  index: number;\n}\n\nexport const PlayerText: FC<PlayerTextProps> = (props) => {\n  const { children, index, player } = props;\n  const divRef = useRef<HTMLDivElement>(null);\n  const [opacity, setOpacity] = useState(0);\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      let currentOpacity = 0;\n      let y = 0;\n\n      if (!player) {\n        return;\n      }\n\n      const { progressStates, currentProgress } = player;\n      const currentState = player.getProgressState(currentProgress);\n\n      if (!currentState || !divRef.current) {\n        return;\n      }\n\n      if (\n        currentState.id === progressStates[index * 2]?.id ||\n        currentState.id === progressStates[index * 2 + 1]?.id\n      ) {\n        if (currentState.type === 'fade') {\n          currentOpacity = progressStates[index * 2]?.alpha || 0;\n          y = progressStates[index * 2]?.y || 0;\n        } else {\n          currentOpacity = 1;\n          y = 0;\n        }\n      } else {\n        currentOpacity = 0;\n      }\n\n      divRef.current.style.opacity = currentOpacity.toString();\n      divRef.current.style.transform = `translate3d(0,${y}px,0)`;\n      setOpacity(currentOpacity);\n    }, 16);\n\n    return () => {\n      clearInterval(id);\n    };\n  }, [index, player]);\n\n  return (\n    <Box\n      xs={{\n        position: 'absolute',\n        padding: 12,\n        left: 24,\n        bottom: 24,\n      }}\n      m={{\n        left: '3vw',\n        bottom: '3vw',\n      }}\n    >\n      <motion.div animate={{ opacity }}>\n        <div ref={divRef}>{children}</div>\n      </motion.div>\n    </Box>\n  );\n};\n","import { FC, useState } from 'react';\n\nimport { MotionValue, useTransform } from 'framer-motion';\n\nimport { useWindowSize } from '../../../../../hooks';\nimport { Box, CanvasPlayerNext } from '../../../../base';\nimport { Player } from '../../../../base/CanvasPlayerNext/Player';\nimport { IntroductionText } from '../IntroductionSection/IntroductionText';\n\nimport { PlayerText } from './PlayerText';\n\nexport interface PlayerContainerProps {\n  elementInViewportProgress: MotionValue<number>;\n  backgroundColor: string;\n  items: {\n    name: string | string[];\n    description: string;\n    textColor?: string;\n    frames: string[];\n  }[];\n}\n\nexport const PlayerContainer: FC<PlayerContainerProps> = (props) => {\n  const { elementInViewportProgress, items, backgroundColor } = props;\n  const { height: windowHeight = 1, width: windowWidth = 1 } = useWindowSize();\n  const [totalProgress, setTotalProgress] = useState(0);\n\n  const [player, setPlayer] = useState<Player | null>(null);\n\n  const allFrames = items.map((item) => item.frames);\n\n  const motionValue = useTransform(\n    elementInViewportProgress,\n    [0, 1],\n    [0, totalProgress],\n  );\n\n  const currentProgress = parseFloat(motionValue.get().toFixed(1));\n\n  return (\n    <Box xs={{ position: 'relative' }}>\n      <CanvasPlayerNext\n        backgroundColor={backgroundColor}\n        width={windowWidth}\n        height={windowHeight}\n        frames={allFrames}\n        progress={currentProgress}\n        onInit={(playerInstance) => {\n          setPlayer(playerInstance);\n        }}\n        onTotalProgressChange={(progress) => {\n          setTotalProgress(progress);\n        }}\n      />\n\n      {items.map((item, index) => (\n        <PlayerText player={player} index={index} key={item.description}>\n          <IntroductionText\n            color={item.textColor as 'black' | 'difference'}\n            name={item.name}\n            description={item.description}\n          />\n        </PlayerText>\n      ))}\n    </Box>\n  );\n};\n","import { FC, ReactNode, useRef } from 'react';\n\nimport { motion, useScroll } from 'framer-motion';\n\nimport { usePositionAnimation } from '../../../../../hooks';\nimport { mergeRefs } from '../../../../../utils';\nimport { Box } from '../../../../base';\n\nimport { PlayerContainer, PlayerContainerProps } from './PlayerContainer';\n\nexport interface FullscreenScrollAnimationProps {\n  children?: ReactNode;\n  backgroundColor: string;\n  items: PlayerContainerProps['items'];\n}\n\nexport const FullscreenScrollAnimation: FC<FullscreenScrollAnimationProps> = (\n  props,\n) => {\n  const { children, items, backgroundColor } = props;\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { scrollYProgress: elementInViewportProgress } = useScroll({\n    target: ref,\n  });\n\n  const { ref: paddingRef, motionValue: paddingMotionValue } =\n    usePositionAnimation({\n      from: 60,\n      to: 0,\n    });\n  const { ref: borderRadiusRef, motionValue: borderRadiusMotionValue } =\n    usePositionAnimation({\n      from: 40,\n      to: 0,\n    });\n\n  const containerRef = mergeRefs(borderRadiusRef, paddingRef);\n  const allImages = items.reduce(\n    (acc: string[], item) => acc.concat(item.frames),\n    [],\n  );\n\n  return (\n    <div ref={ref}>\n      <Box\n        css={{\n          height: `${allImages.length * 5}vh`,\n          position: 'relative',\n          zIndex: 9999,\n        }}\n      >\n        <Box\n          css={{\n            top: 0,\n            position: 'sticky',\n          }}\n        >\n          <Box\n            xs={{\n              width: '100%',\n              height: '100vh',\n              overflow: 'hidden',\n              '& canvas': {\n                background: backgroundColor,\n                display: 'block',\n              },\n            }}\n          >\n            <motion.div\n              ref={containerRef}\n              style={{\n                paddingLeft: paddingMotionValue,\n                paddingRight: paddingMotionValue,\n              }}\n            >\n              <motion.div\n                style={{\n                  overflow: 'hidden',\n                  transform: `translate3d(0,0,0)`,\n                  borderRadius: borderRadiusMotionValue,\n                }}\n              >\n                <PlayerContainer\n                  backgroundColor={backgroundColor}\n                  items={items}\n                  elementInViewportProgress={elementInViewportProgress}\n                />\n              </motion.div>\n            </motion.div>\n          </Box>\n        </Box>\n      </Box>\n      {children}\n    </div>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Flex,\n  Link,\n  Section,\n  Span,\n} from '../../../../base';\nimport { useMultiChainSupportMedia } from '../../../../common';\n\nexport interface MultiChainSupportSectionProps {\n  children?: ReactNode;\n}\n\nexport const MultiChainSupportSection: FC<MultiChainSupportSectionProps> = (\n  props,\n) => {\n  const { children } = props;\n  const MultiChainSupportMediaCardData = useMultiChainSupportMedia();\n  const { mainTitle, button, link, imageNode, description } =\n    MultiChainSupportMediaCardData;\n  const theme = useTheme();\n\n  return (\n    <Section>\n      <Container>\n        <Box\n          xs={{ paddingTop: 72, paddingBottom: 72 }}\n          m={{ paddingTop: 100, paddingBottom: 100 }}\n          l={{ paddingTop: 120, paddingBottom: 120 }}\n        >\n          <Box\n            xs={{\n              borderRadius: 40,\n              position: 'relative',\n              backgroundColor: theme.colors.test100,\n              padding: '48px 36px',\n            }}\n            m={{\n              padding: 0,\n            }}\n          >\n            <Flex\n              xs={{\n                gap: 20,\n                flexDirection: 'column',\n              }}\n              m={{\n                gap: 0,\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Flex\n                xs={{\n                  gap: 20,\n                  flexDirection: 'column',\n                }}\n                m={{\n                  gap: 24,\n                  paddingLeft: 72,\n                  paddingTop: 72,\n                }}\n              >\n                <Span\n                  xs={{\n                    color: theme.colors.test500,\n                    ...theme.text.medium700,\n                  }}\n                  m={theme.text.medium800}\n                >\n                  {mainTitle}\n                </Span>\n                <Span\n                  xs={{\n                    color: theme.colors.test400,\n                    ...theme.text.normal200,\n                  }}\n                  m={theme.text.normal300}\n                >\n                  {description}\n                </Span>\n\n                <Box>\n                  <Link to={link}>\n                    <Button variant=\"outlined\">{button}</Button>\n                  </Link>\n                </Box>\n              </Flex>\n              <Box\n                xs={{\n                  maxWidth: 420,\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                }}\n                m={{\n                  marginRight: 0,\n                }}\n              >\n                {imageNode}\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        {children}\n      </Container>\n    </Section>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Flex } from '../../../../../base/Flex';\n\nexport interface ContentColumnProps {\n  children?: ReactNode;\n}\n\nexport const ContentColumn: FC<ContentColumnProps> = (props) => {\n  const { children } = props;\n\n  return (\n    <Flex xs={{ flexDirection: 'column', gap: 64, flex: 1 }}>{children}</Flex>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Flex } from '../../../../../base';\n\nexport interface ContentItemProps {\n  children?: ReactNode;\n}\n\nexport const ContentItem: FC<ContentItemProps> = (props) => {\n  const { children } = props;\n\n  return <Flex xs={{ flexDirection: 'column', gap: 16 }}>{children}</Flex>;\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Span } from '../../../../../base';\n\nexport interface ContentItemDescriptionProps {\n  children?: ReactNode;\n}\n\nexport const ContentItemDescription: FC<ContentItemDescriptionProps> = (\n  props,\n) => {\n  const { children } = props;\n  const theme = useTheme();\n  const n2 = { ...theme.text.normal200, opacity: 0.5 };\n\n  return <Span xs={n2}>{children}</Span>;\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Flex } from '../../../../../base';\n\nexport interface ContentItemDescriptionsProps {\n  children?: ReactNode;\n}\n\nexport const ContentItemDescriptions: FC<ContentItemDescriptionsProps> = (\n  props,\n) => {\n  const { children } = props;\n\n  return (\n    <Flex\n      xs={{\n        flexDirection: 'column',\n      }}\n    >\n      {children}\n    </Flex>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { H2 } from '../../../../../base';\n\nexport interface ContentItemTitleProps {\n  children?: ReactNode;\n}\n\nexport const ContentItemTitle: FC<ContentItemTitleProps> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n\n  return <H2 xs={theme.text.medium600}>{children}</H2>;\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { H2 } from '../../../../../base';\n\nexport interface ContentItemTitle2Props {\n  children?: ReactNode;\n}\n\nexport const ContentItemTitle2: FC<ContentItemTitle2Props> = (props) => {\n  const { children } = props;\n  const theme = useTheme();\n  const m3 = { ...theme.text.medium300, opacity: 0.5 };\n\n  if (!children) {\n    return null;\n  }\n\n  return <H2 xs={m3}>{children}</H2>;\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Box } from '../../../../../base';\n\nimport { ContentColumn } from './ContentColumn';\nimport { ContentItem } from './ContentItem';\nimport { ContentItemDescription } from './ContentItemDescription';\nimport { ContentItemDescriptions } from './ContentItemDescriptions';\nimport { ContentItemTitle } from './ContentItemTitle';\nimport { ContentItemTitle2 } from './ContentItemTitle2';\n\nexport type DynamicContentItems = {\n  title: string;\n  content: {\n    title2?: string;\n    description?: string;\n    descriptions?: string[];\n  }[];\n}[];\n\nexport interface DynamicContentProps {\n  children?: ReactNode;\n  items: DynamicContentItems;\n}\n\nexport const DynamicContent: FC<DynamicContentProps> = (props) => {\n  const { children, items = [] } = props;\n\n  if (items.length === 0) {\n    return null;\n  }\n\n  return (\n    <ContentColumn>\n      {items.map((item) => (\n        <ContentItem key={item.title}>\n          <ContentItemTitle>{item.title}</ContentItemTitle>\n\n          {item.content.map((item2) => (\n            <Box key={JSON.stringify(item2)}>\n              <ContentItemTitle2>{item2.title2}</ContentItemTitle2>\n\n              {item2.description && (\n                <ContentItemDescription>\n                  {item2.description}\n                </ContentItemDescription>\n              )}\n\n              {item2.descriptions && (\n                <ContentItemDescriptions>\n                  {item2.descriptions.map((description) => (\n                    <ContentItemDescription key={description}>\n                      {description}\n                    </ContentItemDescription>\n                  ))}\n                </ContentItemDescriptions>\n              )}\n            </Box>\n          ))}\n        </ContentItem>\n      ))}\n\n      {children}\n    </ContentColumn>\n  );\n};\n","import { FC } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Flex } from '../../../../../base';\n\nimport { DynamicContent, DynamicContentItems } from './DynamicContent';\n\nexport interface ContentProps {\n  content: {\n    left: DynamicContentItems;\n    right: DynamicContentItems;\n  };\n}\n\nexport const Content: FC<ContentProps> = (props) => {\n  const { content } = props;\n  const theme = useTheme();\n\n  return (\n    <Flex\n      xs={{\n        justifyContent: 'center',\n        flexDirection: 'column',\n        color: theme.colors.white,\n        gap: 64,\n      }}\n      s={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        width: '60vw',\n      }}\n      m={{ width: 'auto', paddingTop: 36, flexDirection: 'row' }}\n      l={{ gap: 100 }}\n      xl={{ gap: 120 }}\n    >\n      <DynamicContent items={content.left} />\n      <DynamicContent items={content.right} />\n    </Flex>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { Box } from '../../../../base';\n\nexport interface SideImageProps {\n  children?: ReactNode;\n  smallImageUrl: string;\n  mediumImageUrl: string;\n  largeImageUrl: string;\n}\n\nexport const SideImage: FC<SideImageProps> = (props) => {\n  const { children, smallImageUrl, mediumImageUrl, largeImageUrl } = props;\n\n  return (\n    <Box\n      css={{\n        display: 'block',\n        backgroundSize: 'contain',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n      }}\n      xs={{\n        backgroundImage: `url(${smallImageUrl})`,\n        width: '100%',\n        height: 589,\n      }}\n      m={{\n        backgroundImage: `url(${mediumImageUrl})`,\n        width: 436,\n        height: 589,\n      }}\n      l={{\n        backgroundImage: `url(${largeImageUrl})`,\n        width: 533,\n        height: 680,\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n","import { FC, ReactNode } from 'react';\n\nimport { useTheme } from '@emotion/react';\n\nimport { Box, Container, Flex } from '../../../../base';\nimport { SectionTitle } from '../../../../common';\n\nimport { Content, ContentProps } from './Content';\nimport { SideImage } from './SideImage';\n\nexport interface TechnicalSpecificationsSectionProps extends ContentProps {\n  children?: ReactNode;\n  title: string;\n  images: {\n    largeImageUrl: string;\n    mediumImageUrl: string;\n    smallImageUrl: string;\n  };\n}\n\nexport const TechnicalSpecificationsSection: FC<\n  TechnicalSpecificationsSectionProps\n> = (props) => {\n  const { children, title, images, content } = props;\n  const theme = useTheme();\n\n  return (\n    <Box\n      xs={{\n        backgroundColor: theme.colors.test400,\n        borderRadius: 40,\n        paddingTop: 70,\n        paddingBottom: 70,\n      }}\n      m={{\n        padding: 70,\n        borderRadius: 0,\n      }}\n    >\n      <Container>\n        <Box xs={{ textAlign: 'center' }}>\n          <SectionTitle color={theme.colors.white}>{title}</SectionTitle>\n        </Box>\n\n        <Flex\n          xs={{ flexDirection: 'column', paddingTop: 40, gap: 40 }}\n          m={{ justifyContent: 'center' }}\n          l={{ flexDirection: 'row' }}\n        >\n          <Flex xs={{ flex: 1, justifyContent: 'center' }}>\n            <SideImage {...images} />\n          </Flex>\n\n          <Content content={content} />\n        </Flex>\n      </Container>\n      {children}\n    </Box>\n  );\n};\n"],"names":["PlayerText","props","children","index","player","divRef","useRef","useState","opacity","setOpacity","useEffect","id","setInterval","currentOpacity","y","progressStates","currentProgress","currentState","getProgressState","current","_progressStates","_progressStates2","type","alpha","style","toString","transform","clearInterval","___EmotionJSX","Box","xs","position","padding","left","bottom","m","motion","animate","ref","PlayerContainer","elementInViewportProgress","items","backgroundColor","useWindowSize","height","windowHeight","width","windowWidth","totalProgress","setTotalProgress","setPlayer","allFrames","map","item","frames","motionValue","useTransform","parseFloat","get","toFixed","CanvasPlayerNext","progress","onInit","playerInstance","onTotalProgressChange","key","description","IntroductionText","color","textColor","name","FullscreenScrollAnimation","useScroll","target","scrollYProgress","usePositionAnimation","from","to","paddingRef","paddingMotionValue","borderRadiusRef","borderRadiusMotionValue","containerRef","mergeRefs","allImages","reduce","acc","concat","css","length","zIndex","overflow","background","display","paddingLeft","paddingRight","borderRadius","MultiChainSupportSection","MultiChainSupportMediaCardData","useMultiChainSupportMedia","mainTitle","button","link","imageNode","theme","useTheme","Section","Container","paddingTop","paddingBottom","l","colors","test100","Flex","gap","flexDirection","alignItems","justifyContent","Span","test500","text","medium700","medium800","test400","normal200","normal300","Link","Button","variant","maxWidth","marginLeft","marginRight","ContentColumn","flex","ContentItem","ContentItemDescription","n2","ContentItemDescriptions","ContentItemTitle","H2","medium600","ContentItemTitle2","m3","medium300","DynamicContent","title","content","item2","JSON","stringify","title2","descriptions","Content","white","s","xl","right","SideImage","smallImageUrl","mediumImageUrl","largeImageUrl","backgroundImage","TechnicalSpecificationsSection","images","textAlign","SectionTitle"],"sourceRoot":""}